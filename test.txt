 static void Main(string[] args)
        {
            StringBuilder sblogs = new StringBuilder();
            string fromPath =ConfigurationManager.AppSettings["fromLocation"].ToString();
            string toPath = ConfigurationManager.AppSettings["toLocation"].ToString();
            string fileType =ConfigurationManager.AppSettings["fileType"].ToString();
            int noOfFile = Convert.ToInt32(ConfigurationManager.AppSettings["noOfFileInIteration"].ToString());
            string[] files = Directory.GetFiles(fromPath,fileType);
            int counter = 0;
            foreach (string file in files)
            {
                if (counter < noOfFile)
                {
                    if (fileType.ToUpper() == "*.ZIP")
                    {
                        sblogs.AppendLine("New File Extracted"+file);
                        string temppath = toPath + System.DateTime.Now.ToString("MMddyyyyHHmmss")+"\\";
                        if (!Directory.Exists(temppath))
                            Directory.CreateDirectory(temppath);
                        ZipFile.ExtractToDirectory(file, temppath);
                        MoveFile(temppath, toPath, "*.PDF");
                        Directory.Delete(temppath, true);
                        File.Delete(file);
                    }
                    else
                    {
                        File.Move(file, toPath + GetFileName(file));
                    }
                }
                counter++;
            }

        }
        private static void MoveFile(string fromFolder, string toFolder, string pattern)
        {
            string[] files = Directory.GetFiles(fromFolder, pattern);
            foreach (string file in files)
            {
                File.Move(file, toFolder + GetFileName(file));
            }
            string[] directories = Directory.GetDirectories(fromFolder);
            foreach (string dir in directories)
            {
                MoveFile(dir, toFolder, pattern);
            }
        }
        private static string GetFileName(string filenamepath)
        {
            string filename = filenamepath.Substring(filenamepath.LastIndexOf('\\')+1);
            return filename;
        }
        
        XmlDocument xmlDoc = new XmlDocument();
					XmlNode docNode = xmlDoc.CreateXmlDeclaration("1.0", "UTF-8", null);
					xmlDoc.AppendChild(docNode);
					
		            XmlNode rootNode = xmlDoc.CreateElement("Document");
		            xmlDoc.AppendChild(rootNode);

		            XmlNode applicationIDNode = xmlDoc.CreateElement("ApplicationID");
		            applicationIDNode.InnerText = "Doc360";
		            rootNode.AppendChild(applicationIDNode);
					
					XmlNode documentClassNode = xmlDoc.CreateElement("DocumentClass");
		            documentClassNode.InnerText = "u_uhone_pl";
		            rootNode.AppendChild(documentClassNode);
					
					XmlNode dataGroupNode = xmlDoc.CreateElement("DataGroup");
		            dataGroupNode.InnerText = "uhpl";
		            rootNode.AppendChild(dataGroupNode);
					
					
					XmlNode indiciesNode = xmlDoc.CreateElement("Indices");
		            rootNode.AppendChild(indiciesNode);
					
					
					XmlNode indexFieldNode = xmlDoc.CreateElement("IndexField");
		            indiciesNode.AppendChild(indexFieldNode);
					
					
					XmlNode idxNameNode = xmlDoc.CreateElement("idxName");
		            idxNameNode.InnerText = "u_claim_nbr";
		            indexFieldNode.AppendChild(idxNameNode);			
					
					XmlNode idxValueNode = xmlDoc.CreateElement("idxValue");
		            idxValueNode.InnerText = claimNumber;
		            indexFieldNode.AppendChild(idxValueNode);
					
					
					indexFieldNode = xmlDoc.CreateElement("IndexField");
		            indiciesNode.AppendChild(indexFieldNode);
					idxNameNode = xmlDoc.CreateElement("idxName");
		            idxNameNode.InnerText = "u_doc_dt";
		            indexFieldNode.AppendChild(idxNameNode);			
					
					idxValueNode = xmlDoc.CreateElement("idxValue");
		            idxValueNode.InnerText = docDate;
		            indexFieldNode.AppendChild(idxValueNode);
					
					indexFieldNode = xmlDoc.CreateElement("IndexField");
		            indiciesNode.AppendChild(indexFieldNode);
					idxNameNode = xmlDoc.CreateElement("idxName");
		            idxNameNode.InnerText = "u_src_sys";
		            indexFieldNode.AppendChild(idxNameNode);			
					
					idxValueNode = xmlDoc.CreateElement("idxValue");
		            idxValueNode.InnerText = "ONBASE";
		            indexFieldNode.AppendChild(idxValueNode);
					
					indexFieldNode = xmlDoc.CreateElement("IndexField");
		            indiciesNode.AppendChild(indexFieldNode);
					idxNameNode = xmlDoc.CreateElement("idxName");
		            idxNameNode.InnerText = "u_ltr_typ";
		            indexFieldNode.AppendChild(idxNameNode);			
					
					idxValueNode = xmlDoc.CreateElement("idxValue");
		            idxValueNode.InnerText = letterType;
		            indexFieldNode.AppendChild(idxValueNode);

		            xmlDoc.Save(Location+doc.ID+".metadata");
