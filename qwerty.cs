// Skeleton generated by Hyland Unity Editor on 4/25/2021 12:37:25 AM
namespace TestAF
{
    using System;
    using System.Text;
    using Hyland.Unity;
    using Hyland.Unity.CodeAnalysis;
	using System.Data;
	using System.Data.SqlClient;
    
    
    /// <summary>
    /// Test - AF
    /// </summary>
    public class TestAF : Hyland.Unity.IExternalAutofillKeysetScript
    {
		
        Hyland.Unity.Application _app=null;
        #region IExternalAutofillKeysetScript
        /// <summary>
        /// Implementation of <see cref="IExternalAutofillKeysetScript.OnExternalAutofillKeysetScriptExecute" />.
        /// <seealso cref="IExternalAutofillKeysetScript" />
        /// </summary>
        /// <param name="app"></param>
        /// <param name="args"></param>
        public void OnExternalAutofillKeysetScriptExecute(Hyland.Unity.Application app, Hyland.Unity.ExternalAutofillKeysetEventArgs args)
        {
			_app = app;
            // Add Code Here
			string sAccountNumber = args.PrimaryKeyword.Value.ToString();
			string connectionString = "Server = WPEC5009onbsq01.cardinalhealth; Database = ONBASE; user=hsi; password=wstinol";
			string queryString = "select ks101,ks102 from hsi.keysetdata111 (NOLOCK) where replace(ks101,'-','')='"+sAccountNumber+"'";
			DataTable dt = SelectDataRows(connectionString, queryString);
			foreach(DataRow dr in dt.Rows)
			{
				KeywordType accountKeywordType = args.KeywordTypes.Find("AR - Account Name")	;
				KeywordType accountNameKeywordType = args.KeywordTypes.Find("AR - Account Number")	;
				string sAccount = dr[0].ToString().Replace("'","");
				string sAccountName = dr[1].ToString().Replace("'","");
				ExternalAutofillKeysetData data = args.Results.CreateExternalAutofillKeysetData();
				data.SetKeyword(args.PrimaryKeyword);
				data.SetKeyword(accountKeywordType.CreateKeyword(sAccount));
				data.SetKeyword(accountNameKeywordType.CreateKeyword(sAccountName));
				args.Results.AddExternalKeywordAutofillKeysetData(data);
			}
			
        }
		private DataTable SelectDataRows(string dbConnectionString,string queryString)
		{
			DataTable dt = new DataTable();
			try
			{
				using (SqlConnection connection =  new SqlConnection(dbConnectionString))
			    {
			        SqlDataAdapter adapter = new SqlDataAdapter();
			        adapter.SelectCommand = new SqlCommand(queryString, connection);
			        adapter.Fill(dt);
			    }
			}
			catch(Exception ex)
			{
				_app.Diagnostics.Write("Error while fetching records Method: SelectDataRows ");
				_app.Diagnostics.Write(ex);
			}
			return dt;
		}
		
        #endregion
    }
}
