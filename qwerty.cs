
// Skeleton generated by Hyland Unity Editor on 3/17/2021 12:18:40 AM
namespace testam1
{
    using System;
    using System.Text;
    using Hyland.Unity;
    using Hyland.Unity.CodeAnalysis;
    using Hyland.Unity.Workflow;
	
    /// <summary>
    /// testam
    /// </summary>
    public class testam1 : Hyland.Unity.IWorkflowScript
    {
		Hyland.Unity.Application _app= null;
		string priKey = string.Empty;
		string secKey = string.Empty;
		string priVal = string.Empty;
		string secVal = string.Empty;
		
		
		
        #region IWorkflowScript
        /// <summary>
        /// Implementation of <see cref="IWorkflowScript.OnWorkflowScriptExecute" />.
        /// <seealso cref="IWorkflowScript" />
        /// </summary>
        /// <param name="app"></param>
        /// <param name="args"></param>
        public void OnWorkflowScriptExecute(Hyland.Unity.Application app, Hyland.Unity.WorkflowEventArgs args)
        {
         	args.SessionPropertyBag.TryGetValue("propPriKey", out priKey);
			args.SessionPropertyBag.TryGetValue("propSecKey", out secKey);
			Document doc = args.Document;
			long primaryDocHandle = doc.ID;
			SetKeywordValues(doc);
			
			DocumentType dt1 = app.Core.DocumentTypes.Find("MIKG Doc Type");
			
			DocumentQuery docQuery = app.Core.CreateDocumentQuery();
			docQuery.AddDocumentType(dt1);
			
			KeywordType priKeyType = app.Core.KeywordTypes.Find(priKey);
			Keyword priKeyword = priKeyType.CreateKeyword(priVal);
			
			KeywordType secKeyType = app.Core.KeywordTypes.Find(secKey);
			Keyword secKeyword = secKeyType.CreateKeyword(secVal);
			
			docQuery.AddKeyword(priKeyword);
			
			DocumentList docList = docQuery.Execute(100000);
			
			
			foreach(Document newDoc in docList)
			{
				if(primaryDocHandle == newDoc.ID)
					continue;
				
				using(DocumentLock documentLock = newDoc.LockDocument())
				{
					if(documentLock.Status == DocumentLockStatus.LockObtained)
					{
						foreach(KeywordRecord keyRec in newDoc.KeywordRecords)
						{
							KeywordModifier keymod = newDoc.CreateKeywordModifier();
							EditableKeywordRecord editKeyRec = keyRec.CreateEditableKeywordRecord();
							Keyword keyword = editKeyRec.Keywords.Find(priKey);
							editKeyRec.UpdateKeyword(priKeyword, secKeyword);
							keymod.UpdateKeywordRecord(editKeyRec);
							keymod.ApplyChanges();
							break;
						}
					}
				}
			}
        }

		private void SetKeywordValues(Hyland.Unity.Document document)
		{
			try
		   	{
		   		foreach(KeywordRecord keywordRecord in document.KeywordRecords)
		        {
		        	foreach(Keyword keyword in keywordRecord.Keywords)
		            {
						if(keyword.KeywordType.Name == priKey)
							priVal = keyword.IsBlank?string.Empty:keyword.Value.ToString();
						if(keyword.KeywordType.Name == secKey)
							secVal = keyword.IsBlank?string.Empty:keyword.Value.ToString();
						
					}
				}
		   }
		   catch(Exception ex)
		   {
		   		_app.Diagnostics.Write(ex);
		   }
		}
        #endregion
    }
}
