// Skeleton generated by Hyland Unity Editor on 3/17/2021 12:18:40 AM
namespace testam
{
    using System;
    using System.Text;
    using Hyland.Unity;
    using Hyland.Unity.CodeAnalysis;
    using Hyland.Unity.Workflow;
	using System.IO;
	
    /// <summary>
    /// testam
    /// </summary>
    public class testam2 : Hyland.Unity.IWorkflowScript
    {
		string strInvoiceNumber = string.Empty;
		string InvoiceNumberFound = string.Empty;
		Hyland.Unity.Application _app= null;
        #region IWorkflowScript
        /// <summary>
        /// Implementation of <see cref="IWorkflowScript.OnWorkflowScriptExecute" />.
        /// <seealso cref="IWorkflowScript" />
        /// </summary>
        /// <param name="app"></param>
        /// <param name="args"></param>
        public void OnWorkflowScriptExecute(Hyland.Unity.Application app, Hyland.Unity.WorkflowEventArgs args)
        {
            
			try
			{
				args.ScriptResult = true;
				_app = app;
				Document doc = args.Document;
				foreach(KeywordRecord keywordRecord in doc.KeywordRecords)
		        {
		        	foreach(Keyword keyword in keywordRecord.Keywords)
		            {
		            	switch (keyword.KeywordType.Name)
		                {
		                   case "AR - Error Code":
								string strErrorCode = keyword.IsBlank?string.Empty:keyword.Value.ToString();
								if(strErrorCode != "1" &&
									strErrorCode != "2" &&
									strErrorCode != "3" &&
									strErrorCode != "18" &&
									strErrorCode != "42" &&
									strErrorCode != "92" &&
									strErrorCode != "93" &&
									strErrorCode != "100" &&
									strErrorCode != "B4" &&
									strErrorCode != "MA01" &&
									strErrorCode != "MA07" &&
									strErrorCode != "MA13" &&
									strErrorCode != "MA18" &&
									strErrorCode != "MA28" &&
									strErrorCode != "XXX")
								{
									args.ScriptResult = false;
								}
								break;
						}
					}
				}
				if(args.ScriptResult == false)
				{
					args.ScriptResult = true;
				
					foreach(KeywordRecord keywordRecord in doc.KeywordRecords)
			        {
			        	foreach(Keyword keyword in keywordRecord.Keywords)
			            {
			            	switch (keyword.KeywordType.Name)
			                {
			                   case "AR - Benefit Amount":
									int strBenefitAmount = keyword.IsBlank?0:Convert.ToInt32(keyword.Value);
									if(strBenefitAmount<=0)
									{
										args.ScriptResult = false;
									}
									break;
							}
						}
					}
				}
			}
			catch(Exception ex)
			{
				app.Diagnostics.Write(ex);
			}
			
			
        }
		
        #endregion
    }
}
